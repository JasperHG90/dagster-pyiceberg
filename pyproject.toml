[project]
name = "dagster-pyiceberg"
version = "0.0.0"
description = "Package for PyIceberg-specific Dagster framework op and resource components."
authors = [
  {name="Jasper Ginn", email="jasperginn@gmail.com"}
]
requires-python = ">=3.10"
readme = "README.md"
dependencies = [
    "pyiceberg[pyarrow]>=0.7.1",
    "dagster>=1.8.2",
    "pendulum>=3.0.0",
    "tenacity>=8.5.0",
]
maintainers = [
  {name="Jasper Ginn", email="jasperginn@gmail.com"}
]
license = {file = "LICENSE.txt"}
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12"
]

[tool.uv.sources]
pyiceberg = { git = "https://github.com/apache/iceberg-python", rev = "0cebec4" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
Homepage = "https://jasperhg90.github.io/dagster-pyiceberg/"
Documentation = "https://jasperhg90.github.io/dagster-pyiceberg/"
Repository = "https://github.com/JasperHG90/dagster-pyiceberg"
"Bug Tracker" = "https://github.com/JasperHG90/dagster-pyiceberg/issues"

[tool.black]
line-length = 88
exclude = '''
^/(
  (
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.venv
    | _build
    | build
    | dist
    | .notebooks
    | .nox
  )
)
'''

[tool.isort]
profile = "black"
extend_skip = [".notebooks", ".nox", ".venv"]

[tool.mypy]
exclude = [
  '^docs/'
]
ignore_missing_imports = true
explicit_package_bases = true

[tool.bandit]
skips = ['B101']

[tool.ruff]
lint.ignore = ["E501"]
extend-exclude = [
  "__pycache__",
  "docs",
  "site",
  ".nox",
  ".notebooks"
]

[tool.pytest.ini_options]
cache_dir = "/home/vscode/workspace/.cache/pytest"

[tool.pyright]
include = ["packages"]
pythonVersion = "3.11"
venvPath = "."
venv = ".venv"

[dependency-groups]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-include-markdown-plugin>=7.0.0",
    "mkdocs-material>=9.5.42",
    "mkdocstrings[python]>=0.26.2",
]
dev = [
    # END WORKSPACE_PACKAGES
    "pre-commit>=3.8.0",
    "ipykernel>=6.29.5",
    "pytest>=8.3.2",
    "pyright>=1.1.385",
    "pytest-coverage>=0.0",
    "testcontainers[postgres]>=4.8.2",
    "psycopg2-binary>=2.9.10",
    #"cachetools>=5.5.0",
    "dagit>=1.8.8",
]
